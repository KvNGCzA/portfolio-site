{"version":3,"sources":["images/logo.svg","images/landing-image.svg","images/tools.svg","images/tools-mobile.svg","images/actions.svg","images/description.svg","images/chevron-right.svg","views/SimplisticPage/index.jsx","serviceWorker.js","index.js"],"names":["module","exports","process","REACT_APP_FORMSPREE","REACT_APP_PROJECTS_LINK","REACT_APP_DRIBBBLE_LINK","REACT_APP_GITHUB_LINK","REACT_APP_LINKEDIN_LINK","SimplisticPage","defaultFormValues","body","email","fullname","state","currentPage","socials","link","text","menuback","formValues","onScroll","height","window","innerHeight","top","pageYOffset","setState","selectPage","document","removeEventListener","scrollTo","behavior","setTimeout","addEventListener","renderHeader","className","src","simplisticLogo","alt","style","backgroundColor","href","onClick","handleSubmit","e","a","preventDefault","axios","post","prevState","console","log","response","onChangeValue","key","persist","target","value","this","landingImage","description","tools","toolsMobile","map","social","rel","chevronRight","onSubmit","actions","placeholder","onChange","type","required","Date","getFullYear","Component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a511f59.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0faf7eb0.svg\";","module.exports = __webpack_public_path__ + \"static/media/landing-image.28ca29c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/tools.67819cda.svg\";","module.exports = __webpack_public_path__ + \"static/media/tools-mobile.5f49ebce.svg\";","module.exports = __webpack_public_path__ + \"static/media/actions.ad403ccf.svg\";","module.exports = __webpack_public_path__ + \"static/media/description.d434cd44.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-right.ebc9817a.svg\";","import React, { Component }  from 'react';\nimport axios from 'axios';\nimport './index.scss';\nimport '../../App.scss';\nimport simplisticLogo from '../../images/logo.svg';\nimport landingImage from '../../images/landing-image.svg';\nimport tools from '../../images/tools.svg';\nimport toolsMobile from '../../images/tools-mobile.svg';\nimport chevronRight from '../../images/chevron-right.svg';\nimport actions from '../../images/actions.svg';\nimport description from '../../images/description.svg';\n\nconst {\n  REACT_APP_FORMSPREE, REACT_APP_PROJECTS_LINK,\n  REACT_APP_DRIBBBLE_LINK, REACT_APP_GITHUB_LINK,\n  REACT_APP_LINKEDIN_LINK\n} = process.env;\n\nclass SimplisticPage extends Component {\n  defaultFormValues = {\n    body: '',\n    email: '',\n    fullname: ''\n  };\n\n  state = {\n    currentPage: 0,\n    socials: [\n      {\n        link: REACT_APP_PROJECTS_LINK,\n        text: 'my projects'\n      }, {\n        link: REACT_APP_DRIBBBLE_LINK,\n        text: 'my dribbble'\n      }, {\n        link: REACT_APP_GITHUB_LINK,\n        text: 'my github'\n      }, {\n        link: REACT_APP_LINKEDIN_LINK,\n        text: 'my linkedin'\n      },\n    ],\n    menuback: '',\n    formValues: { ...this.defaultFormValues }\n  }\n\n  componentDidMount() {\n    document.addEventListener('scroll', this.onScroll, false);\n  }\n\n  onScroll = () => {\n    const { currentPage, menuback } = this.state;\n    const height = window.innerHeight;\n    const top = window.pageYOffset;\n    if (top > 270 && !menuback) {\n      this.setState({ menuback: 'rgba(63, 61, 86, 0.8)' })\n    } else if (top < 270 && menuback) {\n      this.setState({ menuback: '' })\n    }\n\n    if (\n      top > (0.8 * height)\n      && top < ((0.8 * height) * 2)\n      && currentPage !== 1\n    ) {\n      this.setState({ currentPage: 1 });\n    } else if (\n      top > (0.8 * (height * 2))\n      && currentPage !== 2\n    ) {\n      this.setState({ currentPage: 2 });\n    } else if (top < (0.8 * height) && currentPage !== 0) {\n      this.setState({ currentPage: 0 });\n    }\n  }\n\n  selectPage = (currentPage) => {\n    document.removeEventListener('scroll', this.onScroll);\n    const height = window.innerHeight;\n    const top = currentPage * height;\n    window.scrollTo({\n      top,\n      behavior: 'smooth'\n    });\n    this.setState({ currentPage });\n    setTimeout(() => document.addEventListener('scroll', this.onScroll, false), 1000);\n  }\n\n  renderHeader = () => {\n    const { currentPage } = this.state;\n    return (\n      <header className=\"simplistic-header\">\n        <div className=\"simplistic-header--item simplistic-header--item--one\">\n          <img src={simplisticLogo} alt=\"logo\"/>\n        </div>\n        <div className=\"simplistic-header--item simplistic-header--item--two\">\n          <ul style={{\n            backgroundColor: this.state.menuback\n          }}>\n            <li className={currentPage === 0 ? 'active' : ''}>\n              <a href=\"#homepage\" onClick={() => this.selectPage(0)}>home</a>\n              {currentPage === 0 ? <span className=\"active--underline-parent\">\n                <span className=\"active--underline\"></span>\n              </span> : null}\n            </li>\n            <li className={currentPage === 1 ? 'active' : ''}>\n              <a href=\"#tools\" onClick={() => this.selectPage(1)}>my tools</a>\n              {currentPage === 1 ? <span className=\"active--underline-parent\">\n                <span className=\"active--underline\"></span>\n              </span> : null}\n            </li>\n            <li className={currentPage === 2 ? 'active' : ''}>\n              <a href=\"#message\" onClick={() => this.selectPage(2)}>contact</a>\n              {currentPage === 2 ? <span className=\"active--underline-parent\">\n                <span className=\"active--underline\"></span>\n              </span> : null}\n            </li>\n          </ul>\n        </div>\n      </header>\n    );\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post(\n        REACT_APP_FORMSPREE,\n        this.state.formValues\n      );\n      this.setState((prevState) => ({\n        ...prevState,\n        formValues: { ...this.defaultFormValues }\n      }))\n    } catch (err) {\n      console.log(err.response);\n    }\n  }\n\n  onChangeValue = (key, e) => {\n    e.persist()\n    this.setState((prevState) => ({\n      ...prevState,\n      formValues: { ...prevState.formValues, [key]: e.target.value }\n    }))\n  }\n\n  render() {\n    const { socials, formValues: { body, email, fullname } } = this.state;\n    return (\n      <div className=\"simplistic-page\">\n        {this.renderHeader()}\n        \n        <div className=\"simplistic-body\">\n\n          <div className=\"introduction\">\n            <img className=\"introduction--image-main\" src={landingImage} alt=\"landing\"/>\n            <img className=\"introduction--image-mobile\" src={description} alt=\"landing\"/>\n          </div>\n\n          <div className=\"simplistic-tools\">\n            <div className=\"simplistic-tools--parent\">\n              <div className=\"simplistic-tools--image-parent\">\n                <img className=\"simplistic-tools--image-main\" src={tools} alt=\"tools\"/>\n                <img className=\"simplistic-tools--image-mobile\" src={toolsMobile} alt=\"tools\"/>\n              </div>\n              <div className=\"simplistic-tools--buttons\">\n                {\n                  socials.map((social) => {\n                    return (\n                      <a href={social.link} key={social.text} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {social.text}\n                        <img src={chevronRight} alt=\"chevron-right\"/>\n                      </a>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          </div>\n\n          <div className=\"simplistic-message\">\n            <p className=\"simplistic-message--title\">\n              send me a message\n            </p>\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"simplistic-form\">\n                <div className=\"simplistic-form--header\">\n                  <img src={actions} alt=\"window actions\" />\n                </div>\n                <div className=\"simplistic-form--text-area\">\n                  <textarea\n                    value={body}\n                    placeholder=\"Tell me what I can do for you :)...\"\n                    onChange={(e) => this.onChangeValue('body', e)}\n                  />\n                </div>\n                <div className=\"simplistic-form--footer\">\n                  <div className=\"simplistic-form--footer--form\">\n                    <div className=\"input-parent\">\n                      <input\n                        value={email}\n                        placeholder=\"enter your email\"\n                        type=\"email\"\n                        onChange={(e) => this.onChangeValue('email', e)}\n                        required\n                      />\n                      <input\n                        value={fullname}\n                        placeholder=\"enter your fullname\"\n                        required\n                        onChange={(e) => this.onChangeValue('fullname', e)}\n                      />\n                    </div>\n                    <button type=\"submit\">\n                      send\n                      <img src={chevronRight} alt=\"chevron-right\"/>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </form>\n            <footer>\n              <p>&copy; Christopher Akanmu {new Date().getFullYear()}</p>\n            </footer>\n          </div>   \n        </div>\n      </div>\n    )\n  }\n} \n\nexport default SimplisticPage;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SimplisticPage from './views/SimplisticPage';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<SimplisticPage />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}